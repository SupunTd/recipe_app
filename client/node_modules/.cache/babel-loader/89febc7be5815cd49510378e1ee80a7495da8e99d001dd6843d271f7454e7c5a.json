{"ast":null,"code":"var _jsxFileName = \"D:\\\\Academic\\\\FYP\\\\WebApp\\\\Text2Pic\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Container, Stack, Flex, Box, useColorModeValue, Button, Input, InputGroup, InputRightElement } from '@chakra-ui/react';\nimport { Layout } from '../components/Layout';\nimport { AiOutlineDownload } from 'react-icons/ai';\nimport { useToast } from '@chakra-ui/react';\nimport { Spinner } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedPage() {\n  _s();\n  const toast = useToast();\n  const bgColor = useColorModeValue('gray.100', 'gray.700');\n  const userBgColor = useColorModeValue('gray.200', 'gray.600');\n  const buttonBgColor = useColorModeValue('blue.400', 'blue.300');\n  const buttonTextColor = useColorModeValue('white', 'gray.800');\n  const buttonHoverBgColor = useColorModeValue('blue.500', 'blue.400');\n  const downloadbuttonBgColor = useColorModeValue('pink.600', 'pink.400');\n  const downloadbuttonTextColor = useColorModeValue('white', 'gray.800');\n  const downloadbuttonHoverBgColor = useColorModeValue('pink.700', 'pink.500');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [chatHistory, setChatHistory] = useState([{\n    role: 'bot',\n    message: \"Hi, How can I assist you?\"\n  }]);\n  const [message, setMessage] = useState('');\n  const chatContainerRef = useRef(null);\n  const scrollToBottom = () => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTo({\n        top: chatContainerRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatHistory]);\n  const addMessageToChat = (role, message) => {\n    setChatHistory(prevHistory => [...prevHistory, {\n      role,\n      message\n    }]);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  const matchImageURL = message => {\n    const regex = /\\[(.*?)\\]\\((.*?)\\)/;\n    const match = message.match(regex);\n    return match;\n  };\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    const payload = {\n      human_msg: message\n    };\n    const url = process.env.REACT_APP_TEXT_TO_IMAGE_API_URL;\n    try {\n      addMessageToChat('user', `${message}`);\n      setMessage('');\n      setIsTyping(true);\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const responseData = await response.json();\n      const botResponse = responseData.ai_msg;\n      const match = matchImageURL(botResponse);\n      setIsTyping(false);\n      if (match) {\n        const imageUrl = match[2];\n        addMessageToChat('bot', `${botResponse.slice(0, match.index)}`);\n        setIsLoading(true);\n        addMessageToChat('image', `${imageUrl}`);\n        addMessageToChat('bot', `${botResponse.slice(match.index + match[0].length)}`);\n        setIsLoading(false);\n      } else {\n        addMessageToChat('bot', `${botResponse}`);\n      }\n    } catch (error) {\n      console.error('Error fetching response:', error);\n      addMessageToChat('bot', 'Bot: Sorry, I encountered an error. Please try again later.');\n    }\n  };\n  const handleDownloadButtonClick = imageUrl => {\n    if (imageUrl) {\n      downloadImage(imageUrl);\n    } else {\n      toast({\n        title: 'No Image Available',\n        description: \"Please generate and save the image first before downloading.\",\n        status: 'warning',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const downloadImage = (url, mimeType = 'image/jpeg') => {\n    setIsLoading(true);\n    console.log('Download URL:', url);\n    fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const decodedData = atob(data.contents.split(',')[1]);\n      const byteArray = new Uint8Array(decodedData.length);\n      for (let i = 0; i < decodedData.length; i++) {\n        byteArray[i] = decodedData.charCodeAt(i);\n      }\n      const blob = new Blob([byteArray], {\n        type: mimeType\n      });\n      const a = document.createElement('a');\n      a.href = URL.createObjectURL(blob);\n      a.download = `text2pic_image.${mimeType.split('/')[1]}`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      setIsLoading(false);\n      toast({\n        title: 'Download Successful',\n        description: \"Your image has been downloaded.\",\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    }).catch(error => {\n      console.error('Download failed:', error);\n      toast({\n        title: 'Download Failed',\n        description: \"Something went wrong while downloading the image.\",\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n      setIsLoading(false);\n    });\n    console.log('Image is downloaded successfully.');\n  };\n  const handleNewChat = () => {\n    setChatHistory([{\n      role: 'bot',\n      message: \"Hi, How can I assist you?\"\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: '7xl',\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 4,\n        mt: 10,\n        mb: 20,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            bg: bgColor,\n            p: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              mt: 4,\n              bg: buttonBgColor,\n              color: buttonTextColor,\n              _hover: {\n                bg: buttonHoverBgColor\n              },\n              onClick: handleNewChat,\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            bg: bgColor,\n            p: 4,\n            borderRadius: \"md\",\n            height: \"600px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              ref: chatContainerRef,\n              flex: \"1\",\n              overflowY: \"auto\",\n              p: 3,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 3,\n                children: [chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(Box, {\n                  bg: chat.role === 'bot' || chat.role === 'image' ? bgColor : userBgColor,\n                  p: 3,\n                  borderRadius: \"md\",\n                  alignSelf: chat.role === 'bot' || chat.role === 'image' ? 'flex-start' : 'flex-end',\n                  children: chat.role === 'image' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: chat.message,\n                      alt: \"Generated\",\n                      width: \"300px\",\n                      height: \"300px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      leftIcon: /*#__PURE__*/_jsxDEV(AiOutlineDownload, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 37\n                      }, this),\n                      mt: 2,\n                      mr: 2,\n                      bg: downloadbuttonBgColor,\n                      color: downloadbuttonTextColor,\n                      _hover: {\n                        bg: downloadbuttonHoverBgColor\n                      },\n                      onClick: () => handleDownloadButtonClick(chat.message),\n                      width: \"300px\",\n                      children: \"Download\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: chat.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)), isTyping && /*#__PURE__*/_jsxDEV(Spinner, {\n                  size: \"sm\",\n                  color: \"blue.500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 28\n                }, this), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                  size: \"lg\",\n                  color: \"blue.500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Type your message here...\",\n                value: message,\n                onChange: e => setMessage(e.target.value),\n                onKeyPress: handleKeyPress,\n                bg: userBgColor,\n                borderRadius: \"md\",\n                focusBorderColor: \"blue.500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  h: \"1.75rem\",\n                  size: \"sm\",\n                  onClick: sendMessage,\n                  bg: buttonBgColor,\n                  color: buttonTextColor,\n                  _hover: {\n                    bg: buttonHoverBgColor\n                  },\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(ProtectedPage, \"TzEXKORW5LXMzrVP8fko+8lDEpc=\", false, function () {\n  return [useToast, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c = ProtectedPage;\nvar _c;\n$RefreshReg$(_c, \"ProtectedPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Container","Stack","Flex","Box","useColorModeValue","Button","Input","InputGroup","InputRightElement","Layout","AiOutlineDownload","useToast","Spinner","jsxDEV","_jsxDEV","ProtectedPage","_s","toast","bgColor","userBgColor","buttonBgColor","buttonTextColor","buttonHoverBgColor","downloadbuttonBgColor","downloadbuttonTextColor","downloadbuttonHoverBgColor","isLoading","setIsLoading","isTyping","setIsTyping","chatHistory","setChatHistory","role","message","setMessage","chatContainerRef","scrollToBottom","current","scrollTo","top","scrollHeight","behavior","addMessageToChat","prevHistory","handleKeyPress","e","key","sendMessage","matchImageURL","regex","match","trim","payload","human_msg","url","process","env","REACT_APP_TEXT_TO_IMAGE_API_URL","response","fetch","method","headers","body","JSON","stringify","responseData","json","botResponse","ai_msg","imageUrl","slice","index","length","error","console","handleDownloadButtonClick","downloadImage","title","description","status","duration","isClosable","mimeType","log","encodeURIComponent","then","ok","Error","data","decodedData","atob","contents","split","byteArray","Uint8Array","i","charCodeAt","blob","Blob","type","a","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","catch","handleNewChat","children","maxW","spacing","mt","mb","bg","p","color","_hover","onClick","fileName","_jsxFileName","lineNumber","columnNumber","w","borderRadius","height","display","flexDirection","ref","flex","overflowY","map","chat","alignSelf","src","alt","width","leftIcon","mr","size","placeholder","value","onChange","target","onKeyPress","focusBorderColor","h","_c","$RefreshReg$"],"sources":["D:/Academic/FYP/WebApp/Text2Pic/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Stack,\r\n  Flex,\r\n  Box,\r\n  useColorModeValue,\r\n  Button,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  \r\n} from '@chakra-ui/react';\r\nimport { Layout } from '../components/Layout';\r\nimport {AiOutlineDownload } from 'react-icons/ai';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { Spinner } from '@chakra-ui/react';\r\n\r\n\r\nexport default function ProtectedPage() {\r\n  const toast = useToast();\r\n  const bgColor = useColorModeValue('gray.100', 'gray.700');\r\n  const userBgColor = useColorModeValue('gray.200', 'gray.600');\r\n  const buttonBgColor = useColorModeValue('blue.400', 'blue.300');\r\n  const buttonTextColor = useColorModeValue('white', 'gray.800'); \r\n  const buttonHoverBgColor = useColorModeValue('blue.500', 'blue.400'); \r\n  const downloadbuttonBgColor = useColorModeValue('pink.600', 'pink.400');\r\n  const downloadbuttonTextColor = useColorModeValue('white', 'gray.800'); \r\n  const downloadbuttonHoverBgColor = useColorModeValue('pink.700', 'pink.500');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [chatHistory, setChatHistory] = useState([{ role: 'bot', message: \"Hi, How can I assist you?\" },]);\r\n  const [message, setMessage] = useState('');\r\n  const chatContainerRef = useRef(null); \r\n  \r\n  const scrollToBottom = () => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTo({\r\n        top: chatContainerRef.current.scrollHeight,\r\n        behavior: 'smooth', \r\n      });\r\n    }\r\n  };\r\n \r\n   useEffect(() => {\r\n     scrollToBottom();\r\n   }, [chatHistory]);\r\n\r\n  const addMessageToChat = (role, message) => {\r\n    setChatHistory((prevHistory) => [...prevHistory, { role, message }]);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const matchImageURL = (message) => {\r\n    const regex = /\\[(.*?)\\]\\((.*?)\\)/; \r\n    const match = message.match(regex);\r\n    return match;\r\n  }\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n    const payload = {\r\n      human_msg: message\r\n    };\r\n    const url = process.env.REACT_APP_TEXT_TO_IMAGE_API_URL;\r\n    \r\n    try {\r\n      addMessageToChat('user', `${message}`);\r\n      setMessage('');\r\n      setIsTyping(true); \r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      const botResponse = responseData.ai_msg;\r\n      const match = matchImageURL(botResponse);\r\n\r\n      setIsTyping(false);\r\n\r\n      if (match) {\r\n        const imageUrl = match[2]; \r\n        addMessageToChat('bot', `${botResponse.slice(0, match.index)}`);\r\n        \r\n        setIsLoading(true);\r\n        addMessageToChat('image', `${imageUrl}`);\r\n        addMessageToChat('bot', `${botResponse.slice(match.index + match[0].length)}`);\r\n        setIsLoading(false);\r\n      } else {\r\n        addMessageToChat('bot', `${botResponse}`);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching response:', error);\r\n      addMessageToChat('bot', 'Bot: Sorry, I encountered an error. Please try again later.');\r\n    }\r\n  };\r\n\r\n\r\n\r\nconst handleDownloadButtonClick = (imageUrl) => {\r\n  if (imageUrl) {\r\n      downloadImage(imageUrl); \r\n  } else {\r\n    toast({\r\n      title: 'No Image Available',\r\n      description: \"Please generate and save the image first before downloading.\",\r\n      status: 'warning',\r\n      duration: 3000,\r\n      isClosable: true,\r\n    });\r\n  }\r\n};\r\n\r\nconst downloadImage = (url, mimeType = 'image/jpeg') => {\r\n  setIsLoading(true); \r\n  console.log('Download URL:', url); \r\n  fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`)\r\n  \r\n      .then((response) => {\r\n          if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n      })\r\n      .then((data) => {\r\n        const decodedData = atob(data.contents.split(',')[1]); \r\n        const byteArray = new Uint8Array(decodedData.length);\r\n  \r\n        for (let i = 0; i < decodedData.length; i++) {\r\n          byteArray[i] = decodedData.charCodeAt(i);\r\n        }\r\n      \r\n      const blob = new Blob([byteArray], { type: mimeType });\r\n      const a = document.createElement('a');\r\n      a.href = URL.createObjectURL(blob);\r\n      a.download = `text2pic_image.${mimeType.split('/')[1]}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      setIsLoading(false);\r\n      toast({\r\n        title: 'Download Successful',\r\n        description: \"Your image has been downloaded.\",\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    })\r\n      .catch((error) => {\r\n          console.error('Download failed:', error);\r\n          toast({\r\n            title: 'Download Failed',\r\n            description: \"Something went wrong while downloading the image.\",\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsLoading(false);\r\n      });\r\n\r\n  console.log('Image is downloaded successfully.');\r\n};\r\n\r\n  \r\n  const handleNewChat = () => {\r\n    setChatHistory([{ role: 'bot', message: \"Hi, How can I assist you?\" }]);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Container maxW={'7xl'}> \r\n        <Stack spacing={4} mt={10} mb={20}>\r\n          <Flex>       \r\n            <Box bg={bgColor}  p={4}>\r\n              \r\n              <Button mt={4} \r\n                      bg={buttonBgColor}\r\n                      color={buttonTextColor}\r\n                      _hover={{ bg: buttonHoverBgColor }} \r\n                      onClick={handleNewChat}\r\n              >\r\n                 New Chat\r\n              </Button>\r\n            </Box>\r\n            \r\n            <Box w=\"100%\" bg={bgColor} p={4} borderRadius=\"md\" height=\"600px\" display=\"flex\" flexDirection=\"column\">\r\n            <Box ref={chatContainerRef} flex=\"1\" overflowY=\"auto\" p={3}>\r\n              <Stack spacing={3}>\r\n                {chatHistory.map((chat, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    bg={chat.role === 'bot' || chat.role === 'image' ? bgColor : userBgColor}\r\n                    p={3}\r\n                    borderRadius=\"md\"\r\n                    alignSelf={chat.role === 'bot' || chat.role === 'image' ? 'flex-start' : 'flex-end'}>\r\n                    {chat.role === 'image' ? (\r\n                      <div>\r\n                        <img src={chat.message} \r\n                        alt=\"Generated\" \r\n                        width=\"300px\" \r\n                        height=\"300px\" \r\n                        \r\n                        />\r\n                        \r\n                        <Button\r\n                          leftIcon={<AiOutlineDownload />}\r\n                          mt={2}\r\n                          mr={2}\r\n                          bg={downloadbuttonBgColor}\r\n                          color={downloadbuttonTextColor}\r\n                          _hover={{ bg: downloadbuttonHoverBgColor }}\r\n                          onClick={() => handleDownloadButtonClick(chat.message)}\r\n                          width=\"300px\"\r\n                        >\r\n                          Download\r\n                        </Button>\r\n                        \r\n                        \r\n                      </div>\r\n                    ) : (\r\n                      <span>{chat.message}</span>\r\n                    )}\r\n                  </Box>\r\n                ))}\r\n              \r\n              {isTyping && <Spinner size=\"sm\" color=\"blue.500\" />} \r\n              {isLoading && <Spinner size=\"lg\" color=\"blue.500\" />} \r\n              \r\n\r\n              </Stack>\r\n              </Box>\r\n            \r\n            <InputGroup size=\"md\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Type your message here...\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                bg={userBgColor}\r\n                borderRadius=\"md\"\r\n                focusBorderColor=\"blue.500\"\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button \r\n                h=\"1.75rem\" \r\n                size=\"sm\" \r\n                onClick={sendMessage}\r\n                bg={buttonBgColor}\r\n                color={buttonTextColor}\r\n                _hover={{ bg: buttonHoverBgColor }}\r\n              >\r\n                  Send\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>    \r\n            </Box>\r\n            </Flex>\r\n        </Stack>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}