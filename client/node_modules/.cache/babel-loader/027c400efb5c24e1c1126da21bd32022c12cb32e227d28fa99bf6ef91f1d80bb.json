{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\recipe_app\\\\client\\\\src\\\\pages\\\\ResetPasswordPage.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { Button, chakra, FormControl, FormLabel, Heading, Input, Stack, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { Card } from '../components/Card';\nimport { Layout } from '../components/Layout';\nimport { useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nexport default function ResetPasswordPage() {\n  _s2();\n  const toast = useToast();\n  const navigate = useNavigate();\n  const {\n    resetPassword\n  } = useAuth();\n  const query = useQuery();\n  // console.log(query)\n\n  const [newPassword, setNewPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Reset password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault();\n          resetPassword(query.get('oobcode'), newPassword).then(response => {\n            console.log(response);\n            toast({\n              description: 'Password has been changed. You can now login. ',\n              status: 'success',\n              duration: 5000,\n              isClosable: true\n            });\n            navigate('/login');\n          }).catch(err => {\n            console.log(err.message);\n            toast({\n              description: err.message,\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"New password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"primary\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Reset password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s2(ResetPasswordPage, \"4zg/uHSh08kVz+vVBlcKI33khN0=\", false, function () {\n  return [useToast, useNavigate, useAuth, useQuery];\n});\n_c = ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["Button","chakra","FormControl","FormLabel","Heading","Input","Stack","useToast","React","useState","Card","Layout","useLocation","useAuth","useNavigate","jsxDEV","_jsxDEV","useQuery","_s","URLSearchParams","search","ResetPasswordPage","_s2","toast","navigate","resetPassword","query","newPassword","setNewPassword","children","textAlign","my","fileName","_jsxFileName","lineNumber","columnNumber","maxW","mx","mt","form","onSubmit","e","preventDefault","get","then","response","console","log","description","status","duration","isClosable","catch","err","message","spacing","id","value","onChange","target","type","autoComplete","required","colorScheme","size","fontSize","_c","$RefreshReg$"],"sources":["D:/Projects/recipe_app/client/src/pages/ResetPasswordPage.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  chakra,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Stack,\r\n  useToast,\r\n} from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { Card } from '../components/Card'\r\nimport { Layout } from '../components/Layout'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useAuth} from '../contexts/AuthContext'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction useQuery(){\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\n\r\nexport default function ResetPasswordPage() {\r\n  const toast = useToast()\r\n  const navigate = useNavigate()\r\n  const {resetPassword} = useAuth()\r\n  const query=useQuery()\r\n// console.log(query)\r\n\r\nconst [newPassword, setNewPassword]=useState('')\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <Heading textAlign='center' my={12}>\r\n        Reset password\r\n      </Heading>\r\n      <Card maxW='md' mx='auto' mt={4}>\r\n        <chakra.form\r\n          onSubmit={async e => {\r\n            e.preventDefault()\r\n            resetPassword(query.get('oobcode'),newPassword)\r\n\r\n            .then(response=>{\r\n              console.log(response)\r\n              toast({\r\n                description: 'Password has been changed. You can now login. ',\r\n                status: 'success',\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })\r\n              navigate('/login')\r\n            })\r\n            .catch(err=>{\r\n              console.log(err.message)\r\n            \r\n            toast({\r\n              description: err.message,\r\n              status: 'error',\r\n              duration: 5000,\r\n              isClosable: true,\r\n            })}\r\n          )}}\r\n        >\r\n          <Stack spacing='6'>\r\n            <FormControl id='password'>\r\n              <FormLabel>New password</FormLabel>\r\n              <Input \r\n              value={newPassword}\r\n              onChange={e=>setNewPassword(e.target.value)}\r\n              type='password' \r\n              autoComplete='password' \r\n              required />\r\n            </FormControl>\r\n            <Button type='submit' colorScheme='primary' size='lg' fontSize='md'>\r\n              Reset password\r\n            </Button>\r\n          </Stack>\r\n        </chakra.form>\r\n      </Card>\r\n    </Layout>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}