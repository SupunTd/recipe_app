{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\recipe_app\\\\client\\\\src\\\\pages\\\\ForgotPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Center, chakra, FormControl, FormLabel, Heading, Input, Stack, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card } from '../components/Card';\nimport DividerWithText from '../components/DividerWithText';\nimport { Layout } from '../components/Layout';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPasswordPage() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const {\n    forgotPassword\n  } = useAuth();\n  const toast = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Forgot password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault();\n          forgotPassword(email).then(response => {\n            console.log(response);\n            toast({\n              description: 'Email sent successfully. Check your email. ',\n              status: 'success',\n              duration: 5000,\n              isClosable: true\n            });\n          }).catch(e => {\n            console.log(e.message);\n            toast({\n              description: e.message,\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            bg: 'red.400',\n            _hover: {\n              bg: 'red.500'\n            },\n            size: \"lg\",\n            fontSize: \"md\",\n            isLoading: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => navigate('/login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordPage, \"G8ejKWHV0lkBVskg4F2mhm0OZdw=\", false, function () {\n  return [useNavigate, useAuth, useToast];\n});\n_c = ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["Button","Center","chakra","FormControl","FormLabel","Heading","Input","Stack","useToast","React","useState","useNavigate","Card","DividerWithText","Layout","useAuth","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","navigate","email","setEmail","forgotPassword","toast","isSubmitting","setIsSubmitting","children","textAlign","my","fileName","_jsxFileName","lineNumber","columnNumber","maxW","mx","mt","form","onSubmit","e","preventDefault","then","response","console","log","description","status","duration","isClosable","catch","message","spacing","id","value","onChange","target","name","type","autoComplete","required","bg","_hover","size","fontSize","isLoading","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Projects/recipe_app/client/src/pages/ForgotPasswordPage.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  Center,\r\n  chakra,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Stack,\r\n  useToast,\r\n} from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Card } from '../components/Card'\r\nimport DividerWithText from '../components/DividerWithText'\r\nimport { Layout } from '../components/Layout'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n\r\nexport default function ForgotPasswordPage() {\r\n  const navigate = useNavigate()\r\n  const [email,setEmail] = useState('')\r\n  const {forgotPassword} = useAuth()\r\n  const toast = useToast()\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n  return (\r\n    <Layout>\r\n      <Heading textAlign='center' my={12}>\r\n        Forgot password\r\n      </Heading>\r\n      <Card maxW='md' mx='auto' mt={4}>\r\n        <chakra.form\r\n          onSubmit={async e => {\r\n            e.preventDefault()\r\n            forgotPassword(email)\r\n              .then(response=>{\r\n                console.log(response)\r\n                toast({\r\n                  description: 'Email sent successfully. Check your email. ',\r\n                  status: 'success',\r\n                  duration: 5000,\r\n                  isClosable: true,\r\n                })\r\n              })\r\n              .catch(e=>{\r\n                console.log(e.message)\r\n              \r\n              toast({\r\n                description: e.message,\r\n                status: 'error',\r\n                duration: 5000,\r\n                isClosable: true,\r\n              })}\r\n            )\r\n          }}\r\n        >\r\n          <Stack spacing='6'>\r\n            <FormControl id='email'>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input value={email}\r\n              onChange={e=>setEmail(e.target.value)}\r\n              name='email' \r\n              type='email' \r\n              autoComplete='email' \r\n              required />\r\n            </FormControl>\r\n            <Button \r\n            type='submit' \r\n            bg={'red.400'}\r\n              _hover={{ bg: 'red.500' }}\r\n            size='lg' \r\n            fontSize='md'\r\n            isLoading={isSubmitting}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Stack>\r\n        </chakra.form>\r\n        <DividerWithText my={6}>OR</DividerWithText>\r\n        <Center>\r\n          <Button variant='link' onClick={() => navigate('/login')}>\r\n            Login\r\n          </Button>\r\n        </Center>\r\n      </Card>\r\n    </Layout>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}