{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\recipe_app\\\\client\\\\src\\\\components\\\\DividerWithText.jsx\",\n  _s = $RefreshSig$();\nimport { Flex, Box, Divider, useColorModeValue, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DividerWithText(props) {\n  _s();\n  const {\n    children,\n    ...flexProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    color: \"gray.300\",\n    ...flexProps,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1\",\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        borderColor: \"currentcolor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"span\",\n      px: \"3\",\n      color: useColorModeValue('gray.600', 'gray.400'),\n      fontWeight: \"medium\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1\",\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        borderColor: \"currentcolor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(DividerWithText, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n  return [useColorModeValue];\n});\n_c = DividerWithText;\nvar _c;\n$RefreshReg$(_c, \"DividerWithText\");","map":{"version":3,"names":["Flex","Box","Divider","useColorModeValue","Text","React","jsxDEV","_jsxDEV","DividerWithText","props","_s","children","flexProps","align","color","flex","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","as","px","fontWeight","_c","$RefreshReg$"],"sources":["D:/Projects/recipe_app/client/src/components/DividerWithText.jsx"],"sourcesContent":["import { Flex, Box, Divider, useColorModeValue, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nexport default function DividerWithText(props) {\r\n  const { children, ...flexProps } = props\r\n  return (\r\n    <Flex align='center' color='gray.300' {...flexProps}>\r\n      <Box flex='1'>\r\n        <Divider borderColor='currentcolor' />\r\n      </Box>\r\n      <Text\r\n        as='span'\r\n        px='3'\r\n        color={useColorModeValue('gray.600', 'gray.400')}\r\n        fontWeight='medium'\r\n      >\r\n        {children}\r\n      </Text>\r\n      <Box flex='1'>\r\n        <Divider borderColor='currentcolor' />\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,IAAI,QAAQ,kBAAkB;AAC9E,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7C,MAAM;IAAEC,QAAQ;IAAE,GAAGC;EAAU,CAAC,GAAGH,KAAK;EACxC,oBACEF,OAAA,CAACP,IAAI;IAACa,KAAK,EAAC,QAAQ;IAACC,KAAK,EAAC,UAAU;IAAA,GAAKF,SAAS;IAAAD,QAAA,gBACjDJ,OAAA,CAACN,GAAG;MAACc,IAAI,EAAC,GAAG;MAAAJ,QAAA,eACXJ,OAAA,CAACL,OAAO;QAACc,WAAW,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNb,OAAA,CAACH,IAAI;MACHiB,EAAE,EAAC,MAAM;MACTC,EAAE,EAAC,GAAG;MACNR,KAAK,EAAEX,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAE;MACjDoB,UAAU,EAAC,QAAQ;MAAAZ,QAAA,EAElBA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACPb,OAAA,CAACN,GAAG;MAACc,IAAI,EAAC,GAAG;MAAAJ,QAAA,eACXJ,OAAA,CAACL,OAAO;QAACc,WAAW,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACV,EAAA,CApBuBF,eAAe;EAAA,QAUxBL,iBAAiB;AAAA;AAAAqB,EAAA,GAVRhB,eAAe;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}