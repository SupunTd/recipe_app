{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\recipe_app\\\\client\\\\src\\\\components\\\\Favorites\\\\favorites.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./style.modules.css\";\nimport Header from \"../Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"pork\");\n  const [recipes, setRecipes] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [user] = useState(JSON.parse(localStorage.getItem(\"user\") || \"{}\")); // Fetch categories when the component mounts\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await axios.get(\"https://www.themealdb.com/api/json/v1/1/categories.php\");\n        setCategories(res.data.categories);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    fetchCategories();\n  }, []); // Fetch recipes based on the selected category\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const res = await axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${selectedCategory}`);\n        setRecipes(res.data.meals);\n      } catch (error) {\n        console.error(\"Error fetching recipes:\", error);\n      }\n    };\n\n    if (selectedCategory) fetchRecipes();\n  }, [selectedCategory]); // Fetch favorite recipes when the user is logged in\n\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (user._id) {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/favorites/${user._id}`);\n          setFavorites(res.data); // Assuming the response contains an array of favorite recipes\n        } catch (error) {\n          console.error(\"Error fetching favorites:\", error);\n        }\n      }\n    };\n\n    fetchFavorites();\n  }, [user._id]); // Function to add a recipe to favorites\n\n  const handleAddToFavorites = async recipe => {\n    if (!user._id) {\n      alert(\"Please log in to add favorites.\");\n      return;\n    }\n\n    try {\n      await axios.post(\"http://localhost:5000/api/favorites\", {\n        userId: user._id,\n        recipeId: recipe.idMeal // The ID of the recipe being added to favorites\n\n      }); // Fetch updated favorites\n\n      const res = await axios.get(`http://localhost:5000/api/favorites/${user._id}`);\n      setFavorites(res.data); // Update local favorites with the new list\n\n      localStorage.setItem(\"favorites\", JSON.stringify(res.data)); // Update local storage\n    } catch (error) {\n      console.error(\"Error adding to favorites:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: styles.navbar,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Recipe App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.category_buttons,\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedCategory === category.strCategory ? styles.active_category : styles.category_btn,\n          onClick: () => setSelectedCategory(category.strCategory),\n          children: category.strCategory\n        }, category.idCategory, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.recipe_grid,\n        children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.recipe_card,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.strMealThumb,\n            alt: recipe.strMeal,\n            className: styles.recipe_img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recipe.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToFavorites(recipe),\n            children: \"Add to Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, recipe.idMeal, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.favorites_section,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Favorite Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.recipe_grid,\n          children: favorites.map(favorite => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.recipe_card,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: favorite.strMealThumb,\n              alt: favorite.strMeal,\n              className: styles.recipe_img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: favorite.strMeal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)]\n          }, favorite.recipeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"1AbQ96boyIKTaChEsixByP5pa50=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/Projects/recipe_app/client/src/components/Favorites/favorites.jsx"],"names":["useState","useEffect","axios","styles","Header","Main","categories","setCategories","selectedCategory","setSelectedCategory","recipes","setRecipes","favorites","setFavorites","user","JSON","parse","localStorage","getItem","fetchCategories","res","get","data","error","console","fetchRecipes","meals","fetchFavorites","_id","handleAddToFavorites","recipe","alert","post","userId","recipeId","idMeal","setItem","stringify","main_container","navbar","category_buttons","map","category","strCategory","active_category","category_btn","idCategory","recipe_grid","recipe_card","strMealThumb","strMeal","recipe_img","favorites_section","favorite"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./style.modules.css\";\r\nimport Header from \"../Header/Header\";\r\n\r\nconst Main = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"pork\");\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [user] = useState(JSON.parse(localStorage.getItem(\"user\") || \"{}\"));\r\n\r\n    // Fetch categories when the component mounts\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const res = await axios.get(\r\n                    \"https://www.themealdb.com/api/json/v1/1/categories.php\"\r\n                );\r\n                setCategories(res.data.categories);\r\n            } catch (error) {\r\n                console.error(\"Error fetching categories:\", error);\r\n            }\r\n        };\r\n\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // Fetch recipes based on the selected category\r\n    useEffect(() => {\r\n        const fetchRecipes = async () => {\r\n            try {\r\n                const res = await axios.get(\r\n                    `https://www.themealdb.com/api/json/v1/1/filter.php?c=${selectedCategory}`\r\n                );\r\n                setRecipes(res.data.meals);\r\n            } catch (error) {\r\n                console.error(\"Error fetching recipes:\", error);\r\n            }\r\n        };\r\n\r\n        if (selectedCategory) fetchRecipes();\r\n    }, [selectedCategory]);\r\n\r\n    // Fetch favorite recipes when the user is logged in\r\n    useEffect(() => {\r\n        const fetchFavorites = async () => {\r\n            if (user._id) {\r\n                try {\r\n                    const res = await axios.get(`http://localhost:5000/api/favorites/${user._id}`);\r\n                    setFavorites(res.data); // Assuming the response contains an array of favorite recipes\r\n                } catch (error) {\r\n                    console.error(\"Error fetching favorites:\", error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchFavorites();\r\n    }, [user._id]);\r\n\r\n    // Function to add a recipe to favorites\r\n    const handleAddToFavorites = async (recipe) => {\r\n        if (!user._id) {\r\n            alert(\"Please log in to add favorites.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.post(\"http://localhost:5000/api/favorites\", {\r\n                userId: user._id,\r\n                recipeId: recipe.idMeal, // The ID of the recipe being added to favorites\r\n            });\r\n\r\n            // Fetch updated favorites\r\n            const res = await axios.get(`http://localhost:5000/api/favorites/${user._id}`);\r\n            setFavorites(res.data); // Update local favorites with the new list\r\n            localStorage.setItem(\"favorites\", JSON.stringify(res.data)); // Update local storage\r\n        } catch (error) {\r\n            console.error(\"Error adding to favorites:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <div className={styles.main_container}>\r\n                <nav className={styles.navbar}>\r\n                    <h1>Recipe App</h1>\r\n                </nav>\r\n\r\n                <div className={styles.category_buttons}>\r\n                    {categories.map((category) => (\r\n                        <button\r\n                            key={category.idCategory}\r\n                            className={\r\n                                selectedCategory === category.strCategory\r\n                                    ? styles.active_category\r\n                                    : styles.category_btn\r\n                            }\r\n                            onClick={() => setSelectedCategory(category.strCategory)}\r\n                        >\r\n                            {category.strCategory}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className={styles.recipe_grid}>\r\n                    {recipes.map((recipe) => (\r\n                        <div key={recipe.idMeal} className={styles.recipe_card}>\r\n                            <img\r\n                                src={recipe.strMealThumb}\r\n                                alt={recipe.strMeal}\r\n                                className={styles.recipe_img}\r\n                            />\r\n                            <h3>{recipe.strMeal}</h3>\r\n                            <button onClick={() => handleAddToFavorites(recipe)}>\r\n                                Add to Favorites\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Favorites Section */}\r\n                <div className={styles.favorites_section}>\r\n                    <h2>Favorite Recipes</h2>\r\n                    <div className={styles.recipe_grid}>\r\n                        {favorites.map((favorite) => (\r\n                            <div key={favorite.recipeId} className={styles.recipe_card}>\r\n                                <img\r\n                                    src={favorite.strMealThumb}\r\n                                    alt={favorite.strMeal}\r\n                                    className={styles.recipe_img}\r\n                                />\r\n                                <h3>{favorite.strMeal}</h3>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}